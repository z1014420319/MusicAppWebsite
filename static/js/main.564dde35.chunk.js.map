{"version":3,"sources":["Redux/Reducers/MusicInfoReducer.js","Redux/Reducers/UserInfoReducer.js","Redux/Reducers/UIReducer.js","Redux/Store.js","Redux/Types.js","Redux/Actions/MusicInfoAction.js","Components/List/ListNav.js","Components/Music/MusiclistItemOpration.js","WriteStateToStorage.js","Components/Play/MainAudio.js","Redux/Actions/UserInfoAction.js","Components/Music/MusiclistItem.js","Redux/Actions/UIAction.js","Components/Music/Musiclist.js","Components/Music/PlaylistItemOpration.js","Components/Music/PlaylistItem.js","Components/Music/Playlist.js","Components/List/ListBody.js","Pages/List.js","Pages/Play.js","Components/My/Login.js","Components/My/Collection.js","Components/My/Register.js","Pages/My.js","Components/BottomNav.js","App.js","index.js"],"names":["initialState","myPlaylists","commonLists","searchList","loding","userName","online","currentPlayList","currentPlaying","musicDuration","currentNav","currentPlayMode","loading","loadingmusic","reducer","combineReducers","UserInfo","state","action","type","payload","MusicInfo","temp1","JSON","parse","stringify","temp2","playlistname","push","musicObj","temp3","deleteIndex","findIndex","item","url","splice","Object","assign","UI","window","localStorage","MusicApp","stores","njwt","verify","body","mobile","err","console","dir","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","middleware","thunk","enhancer","applyMiddleware","store","createStore","createPlaylist","dispatch","addMusciToPlaylist","deleteMusicFromPlaylist","getCommonLists","nav","noNeedForUpdate","response","list","i","axios","get","Promise","all","then","res","data","catch","getSearchList","searchValue","result","map","artistsname","author","name","title","picurl","pic","mapDispatchToProps","ListNav","props","handleSubmit","e","preventDefault","history","setState","handleChange","target","value","search","React","createRef","visibility","test","this","location","pathname","activeClassName","to","onSubmit","style","ref","onChange","current","focus","Component","connect","withRouter","MusiclistItemOpration","className","data-url","onClick","handleShowPlaylist","handleDeleteMusicFromPlaylist","getState","claims","jwt","create","setExpiration","token","compact","removeItem","setItem","login","userData","WriteStateToStorage","setCurrentPlayList","setCurrentPlaying","imageLoadEnd","MusiclistItem","listenMusic","includes","some","audio","document","querySelector","paused","play","handleLoad","localStyle","color","data-access","listType","alt","onLoad","src","Musiclist","index","key","length","PlaylistItemOpration","handlePlay","parentNode","dataset","alert","data-playlistname","handleDeletePlaylist","checked","handleCheckChange","PlaylistItem","handleViewPlaylist","Playlist","keys","music","currentMusicUrl","ListBody","handleCreatePlaylist","prompt","hasOwnProperty","stopPropagation","showPlaylist","handleHidePlaylist","currentMusic","find","parentElement","handlerReload","clearSearchResult","forceUpdate","CircularProgress","size","setCurrentNav","sameNav","List","count","nextProps","nextState","prevProps","prevState","snapshot","match","setPlayMode","mode","Play","noMusic","showMusiclist","handleSetInterval","pause","handleClearInterval","clickPlayer","ele","tagName","changetomode","previousMusic","noMusicInPlaylist","currentTime","Math","floor","random","nextMusic","clickedMusicItem","access","handleTouchStart","transform","pageX","targetTouches","iniCurrentTime","handleTouchMove","handleTouchEnd","cancelAnimationFrame","interval","fn","requestAnimationFrame","second","min","String","left","round","data-changetomode","width","onTouchMove","onTouchStart","onTouchEnd","convertSecond","onClickCapture","margin","display","Login","fd","FormData","append","password","post","code","error_message","message","finally","autoFocus","forms","elements","disabled","errors","logout","offlineData","deletePlaylist","Collection","handleClidk","loggedout","confirm","currentPlaylist","textContent","paddingTop","Register","My","path","component","replace","BottomNav","event","BottomNavigation","showLabels","BottomNavigationAction","Link","label","icon","setMusicDuration","duration","MainAudio","handleEnded","forwardRef","list1","index1","list2","index2","autoPlay","onLoadedData","preload","addEventListener","withRef","App","onbeforeunload","render","ReactDOM","getElementById"],"mappings":"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","file":"static/js/main.564dde35.chunk.js","sourcesContent":["import {\n    LODING_PLAYLISTS,\n    SET_PLAYLISTS,\n    CREATE_PLAYLIST,\n    DELETE_PLAYLIST,\n    ADD_MUSIC_TO_PLAYLIST,\n    DELETE_MUSIC_FROM_PLAYLIST,\n\n    SET_COMMON_LISTS,\n    SET_SEARCH_LIST,\n\n    SET_MUSIC_INFO\n} from '../Types'\nconst initialState = {\n    myPlaylists : {'最近播放':[]},\n    commonLists : {'搜索':[]},\n    searchList : [],\n    loding : false,\n  }\nexport default function (state =initialState, action) {\n    switch(action.type){\n        case LODING_PLAYLISTS:\n            return {\n                ...state,\n                loding : true\n            }\n        case SET_PLAYLISTS:\n            return {\n                ...state,\n                loding : false,\n                myPlaylists : [...state.myPlaylists,action.payload]\n            }\n        case CREATE_PLAYLIST:\n            return {\n                ...state,\n                myPlaylists : {...state.myPlaylists,[action.payload]:[]}\n            }\n        case DELETE_PLAYLIST:\n            const temp1 = JSON.parse(JSON.stringify(state))\n            delete temp1.myPlaylists[action.payload]\n            return temp1\n        case ADD_MUSIC_TO_PLAYLIST:\n            const temp2 = JSON.parse(JSON.stringify(state))\n            temp2.myPlaylists[action.payload.playlistname].push(action.payload.musicObj)\n            return temp2\n        case DELETE_MUSIC_FROM_PLAYLIST:\n            const temp3 = JSON.parse(JSON.stringify(state))\n            const deleteIndex = temp3.myPlaylists[action.payload.playlistname].findIndex(item=>(\n                item.url===action.payload.musicObj.url\n            ))\n            temp3.myPlaylists[action.payload.playlistname].splice(deleteIndex,1)\n            return temp3\n        case SET_COMMON_LISTS:\n            return {\n                ...state,\n                commonLists : Object.assign({},state.commonLists,action.payload)\n            }\n        case SET_SEARCH_LIST:\n            return {\n                ...state,\n                commonLists : Object.assign({},state.commonLists,action.payload)\n            }\n        case SET_MUSIC_INFO:\n            if(action.payload){\n                return action.payload\n            }else{\n                return initialState\n            }\n        default:\n            return state;\n    }\n}","import {\n    SET_USER_NAME,\n    REMOVE_USER_NAME,\n    SET_OFFLINE,\n    SET_CURRENT_PLAYLIST,\n    SET_CURRENT_PLAYING,\n    SET_MUSIC_DURATION,\n    \n    SET_CURRENT_NAV,\n    SET_USER_INFO,\n    SET_PLAY_MODE\n} from '../Types'\n\nconst initialState = {\n    userName : '',\n    online : true,\n    currentPlayList : '最近播放',\n    currentPlaying : {},\n    musicDuration : 0,\n    currentNav : '' ,//'' Is Required Invalid Initial Value\n    currentPlayMode : 'loop' //loop random list\n}\n\nexport default function (state = initialState, action) {\n    switch(action.type){\n        case SET_USER_NAME:\n            return {\n                ...state,\n                userName : action.payload,\n                online : true\n            }\n        case REMOVE_USER_NAME:\n            return {\n                ...state,\n                userName : '',\n            }\n        case SET_OFFLINE:\n            return {\n                ...state,\n                online : false\n            }\n        case SET_CURRENT_PLAYLIST:\n            return {\n                ...state,\n                currentPlayList : action.payload\n            }\n        case SET_CURRENT_PLAYING:\n            return {\n                ...state,\n                currentPlaying : action.payload\n            }\n        case SET_MUSIC_DURATION:\n            return {\n                ...state,\n                musicDuration : action.payload\n            }\n        case SET_CURRENT_NAV:\n            return {\n                ...state,\n                currentNav : action.payload\n            }\n        case SET_USER_INFO:\n            if(action.payload){\n                action.payload.online = true\n                return action.payload\n            }else{\n                return {\n                    ...initialState,\n                    userName:state.userName\n                }\n            }\n        case SET_PLAY_MODE:\n            return {\n                ...state,\n                currentPlayMode : action.payload\n            }\n        default:\n            return state;\n    }\n}","import {\n  LOADING_UI,\n  STOP_LOADING_UI,\n  LOADING_MUSIC,\n  STOP_LOADING_MUSIC\n} from '../Types';\n\nconst initialState = {\n  loading: false,\n  loadingmusic: false\n};\n\nexport default function(state = initialState, action) {\n  switch (action.type) {\n    case LOADING_UI:\n      return {\n        ...state,\n        loading: true\n      };\n    case STOP_LOADING_UI:\n      return {\n        ...state,\n        loading: false\n      };\n      case LOADING_MUSIC:\n      return {\n        ...state,\n        loadingmusic: true\n      };\n    case STOP_LOADING_MUSIC:\n      return {\n        ...state,\n        loadingmusic: false\n      };\n    default:\n      return state;\n  }\n}\n","import {createStore,combineReducers,applyMiddleware,compose} from 'redux'\nimport thunk from 'redux-thunk'\n\nimport MusicInfoReducer from './Reducers/MusicInfoReducer'\nimport UserInfoRuducer from './Reducers/UserInfoReducer'\nimport UIReducer from './Reducers/UIReducer'\n\nimport njwt from 'njwt'\n\nconst reducer = combineReducers({\n    UserInfo : UserInfoRuducer,\n    MusicInfo : MusicInfoReducer,\n    UI : UIReducer\n})\n\nlet initialState ={}\nif(window.localStorage.MusicApp){\n  try{\n    const stores = njwt.verify(window.localStorage.MusicApp,'MusicApp').body.stores\n    initialState = stores['offline']\n    for(var mobile in stores){\n      if(mobile !== 'offline' && stores[mobile].UserInfo.online){\n        initialState = stores[mobile]\n        break\n      }\n    }\n  }catch(err){\n    console.dir(err)\n  }\n}\n\nconst composeEnhancers = typeof window === 'object' && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__\n? window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__({})\n: compose\n\nconst middleware = [thunk]\n\nconst enhancer = composeEnhancers(applyMiddleware(...middleware))\n\nconst store = createStore(reducer,initialState,enhancer);\n\nexport default store","export const SET_USER_NAME = 'SET_USER_NAME'\nexport const REMOVE_USER_NAME = 'REMOVE_USER_NAME'\nexport const SET_OFFLINE = 'SET_OFFLINE'\nexport const SET_CURRENT_PLAYLIST = 'SET_CURRENT_PLAYLIST'\nexport const SET_CURRENT_PLAYING = 'SET_CURRENT_PLAYING'\nexport const SET_MUSIC_DURATION = 'SET_MUSIC_DURATION'\nexport const SET_CURRENT_NAV = 'SET_CURRENT_NAV'\nexport const SET_PLAY_MODE = 'SET_PLAY_MODE'\n\n\nexport const LODING_PLAYLISTS = 'LODING_PLAYLISTS'\nexport const SET_PLAYLISTS = 'SET_PLAYLISTS'\nexport const CREATE_PLAYLIST = 'CREATE_PLAYLIST'\nexport const DELETE_PLAYLIST = 'DELETE_PLAYLIST'\nexport const ADD_MUSIC_TO_PLAYLIST = 'ADD_MUSIC_TO_PLAYLIST'\nexport const DELETE_MUSIC_FROM_PLAYLIST = 'DELETE_MUSIC_FROM_PLAYLIST'\n\nexport const SET_COMMON_LISTS = 'SET_COMMON_LISTS'\nexport const SET_SEARCH_LIST = 'SET_SEARCH_LIST'\n\n\nexport const STOP_LOADING_MUSIC = 'STOP_LOADING_MUSIC'\nexport const LOADING_MUSIC = 'LOADING_MUSIC'\nexport const LOADING_UI = 'LOADING_UI'\nexport const STOP_LOADING_UI = 'STOP_LOADING_UI'\n\nexport const SET_MUSIC_INFO = 'SET_MUSIC_INFO'\nexport const SET_USER_INFO = 'SET_USER_INFO'","import {\n    SET_COMMON_LISTS,\n    SET_SEARCH_LIST,\n    CREATE_PLAYLIST,\n    DELETE_PLAYLIST,\n    ADD_MUSIC_TO_PLAYLIST,\n    DELETE_MUSIC_FROM_PLAYLIST,\n    LOADING_UI,\n    STOP_LOADING_MUSIC,\n    LOADING_MUSIC\n} from '../Types'\n\nimport axios from 'axios'\n\nexport const getPlaylists = () => (dispatch) => {\n\n}\n\nexport const createPlaylist = (playlistname) => (dispatch) => {\n    dispatch({\n        type:CREATE_PLAYLIST,\n        payload:playlistname\n    })\n}\n\nexport const deletePlaylist = (playlistname) => (dispatch) => {\n    console.dir(playlistname)\n    dispatch({\n        type:DELETE_PLAYLIST,\n        payload:playlistname\n    })\n}\n\nexport const addMusciToPlaylist = (musicObj,playlistname) => (dispatch) => {\n    dispatch({\n        type:ADD_MUSIC_TO_PLAYLIST,\n        payload:{musicObj,playlistname}\n    })\n}\n\nexport const deleteMusicFromPlaylist = (musicObj,playlistname) => (dispatch) => {\n    dispatch({\n        type:DELETE_MUSIC_FROM_PLAYLIST,\n        payload:{musicObj,playlistname}\n    })\n}\n\nexport const getCommonLists = (nav,noNeedForUpdate) => (dispatch) => {\n    if(noNeedForUpdate || nav ==='搜索'){\n        return\n    }\n    const response = [];\n    const list = {[nav]:[]}\n    dispatch({\n        type:SET_COMMON_LISTS,\n        payload:list\n    })\n    dispatch({\n        type:LOADING_UI\n    })\n    dispatch({\n        type:LOADING_MUSIC\n    })\n    for(var i = 0; i < 1; i++){\n        response.push(axios.get('https://api.uomg.com/api/rand.music?sort='+nav+'&format=json'))\n    }\n    Promise.all(response).then(res=>{\n        for(var item of res){\n            list[nav].push(item.data.data)\n        }\n        dispatch({\n            type:SET_COMMON_LISTS,\n            payload:list\n        })\n        dispatch({\n            type:STOP_LOADING_MUSIC,\n        })\n    }).catch(err=>(console.dir(err)))\n}\n\nexport const getSearchList = (searchValue) => (dispatch) => {\n    dispatch({\n        type:LOADING_MUSIC\n    })\n    axios.get('https://api.apiopen.top/searchMusic?name='+searchValue).then(res=>{\n        const result = res.data.result.map(item=>({\n            artistsname : item.author,\n            name : item.title,\n            picurl : item.pic,\n            url : item.url\n        }))\n        dispatch({\n            type:SET_SEARCH_LIST,\n            payload:{'搜索':result}\n        })\n        dispatch({\n            type:STOP_LOADING_MUSIC,\n        })\n    })\n}","import React, { Component } from 'react';\nimport {NavLink,withRouter} from 'react-router-dom'\nimport {connect} from 'react-redux'\nimport {getSearchList} from '../../Redux/Actions/MusicInfoAction'\n\nconst mapDispatchToProps = {\n    getSearchList\n}\n\nclass ListNav extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            searchValue : ''\n        };\n        this.search = React.createRef()\n    }\n    handleSubmit = (e) => {\n        e.preventDefault();\n        if(!this.state.searchValue)return\n        this.props.getSearchList(this.state.searchValue)\n        this.props.history.push('/list/搜索?'+this.state.searchValue,null)\n        this.setState({\n            searchValue : ''\n        })\n    }\n    handleChange = (e) => {\n        this.setState({\n            searchValue : e.target.value\n        })\n    }\n    render() {\n        let visibility = ''\n        switch(/搜索/.test(this.props.location.pathname)){\n            case false:\n                visibility = 'hidden'\n                break\n            case true:\n                visibility = 'visible'\n                break\n            default:\n                break\n        }\n        return (<>\n            <nav>\n                <NavLink activeClassName='nav-selected' to=\"/list/热歌榜\">热歌榜</NavLink>\n                <NavLink activeClassName='nav-selected' to=\"/list/新歌榜\">新歌榜</NavLink>\n                <NavLink activeClassName='nav-selected' to=\"/list/抖音榜\">抖音榜</NavLink>\n                <NavLink activeClassName='nav-selected' to=\"/list/电音榜\">电音榜</NavLink>\n                <NavLink activeClassName='nav-selected' to=\"/list/搜索\">搜索</NavLink>\n            </nav>\n            <form onSubmit={this.handleSubmit} style={{visibility}}>\n                <input ref = {this.search} type='text' value={this.state.searchValue} onChange={this.handleChange}/>\n            </form>\n        </>);\n    }\n    componentDidUpdate(){\n        this.search.current.focus()\n    }\n}\n \nexport default connect(null,mapDispatchToProps)(withRouter(ListNav));","import React, { Component } from 'react';\n \nclass MusiclistItemOpration extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {};\n    }\n    render() {\n        return (<>\n            {this.props.type==='OPRATE' ?\n             <button className='opration' data-url={this.props.musicObj.url} onClick={this.props.handleShowPlaylist}>· · ·</button>:\n             <button data-url={this.props.musicObj.url} onClick={this.props.handleDeleteMusicFromPlaylist}>X</button>\n             }\n        </>);\n    }\n}\n \nexport default MusiclistItemOpration;","import njwt from 'njwt'\nimport store from './Redux/Store'\n\nexport default ()=>{\n    let stores = {}\n      if(window.localStorage.MusicApp){\n        try{\n          stores = njwt.verify(window.localStorage.MusicApp,'MusicApp').body.stores\n        }catch(err){\n\n        }\n      }\n      stores[store.getState().UserInfo.userName || 'offline'] = {\n        ...store.getState()\n      }\n      const claims = {\n        stores\n      }\n      const jwt = njwt.create(claims,'MusicApp')\n      jwt.setExpiration()\n      const token = jwt.compact();\n      window.localStorage.removeItem('MusicApp')\n      window.localStorage.setItem('MusicApp',token)\n}","import React, { Component } from 'react';\nimport {connect} from 'react-redux'\nimport {setCurrentPlaying,setMusicDuration} from '../../Redux/Actions/UserInfoAction'\n\nconst mapStateToProps = (state) => ({\n    currentPlaying : state.UserInfo.currentPlaying,\n    currentPlayMode : state.UserInfo.currentPlayMode,\n    myPlaylists : state.MusicInfo.myPlaylists,\n    currentPlayList : state.UserInfo.currentPlayList\n})\n\nconst mapDispatchToProps = {\n    setCurrentPlaying,\n    setMusicDuration\n}\n \nclass MainAudio extends Component {\n    render() {\n        return (\n            <audio autoPlay onLoadedData={this.setMusicDuration} preload='true' \n                ref={this.props.forwardRef} src={this.props.currentPlaying.url}/>\n        );\n    }\n    handleEnded = (e)=> {\n        switch(this.props.currentPlayMode){\n            case 'loop':\n                this.props.forwardRef.current.currentTime = 0\n                this.props.forwardRef.current.play()\n                break\n            case 'list':\n                let list1 = this.props.myPlaylists[this.props.currentPlayList]\n                let index1 = list1.findIndex((item)=>(\n                    item.url === this.props.currentPlaying.url\n                    ))\n                this.props.setCurrentPlaying(list1[(index1+1)%list1.length])\n                if(index1===(index1+1)%list1.length){\n                    this.props.forwardRef.current.currentTime = 0\n                    this.props.forwardRef.current.play()\n                }\n                break\n            case 'random':\n                let list2 = this.props.myPlaylists[this.props.currentPlayList]\n                let index2 = Math.floor(Math.random()*list2.length)\n                this.props.setCurrentPlaying(list2[index2])\n                this.props.forwardRef.current.play()\n                break\n            default :\n                break\n        }\n    }\n    setMusicDuration = (e) => {\n        this.props.setMusicDuration(e.target.duration)\n    }\n    componentDidMount(){\n        this.props.forwardRef.current.pause()\n        this.props.forwardRef.current.addEventListener('ended',this.handleEnded)\n    }\n}\n\nconst withRef = (Component) => (\n    React.forwardRef((props,ref) => (\n        <Component {...props} forwardRef={ref} />\n    ))\n)\n \nexport default withRef(connect(mapStateToProps,mapDispatchToProps)(MainAudio));","import {\n    SET_CURRENT_NAV,\n    SET_USER_NAME,\n    REMOVE_USER_NAME,\n    SET_OFFLINE,\n    SET_MUSIC_INFO,\n    SET_USER_INFO,\n    SET_CURRENT_PLAYLIST,\n    SET_CURRENT_PLAYING,\n    SET_PLAY_MODE,\n    SET_MUSIC_DURATION\n} from '../Types'\nimport WriteStateToStorage from '../../WriteStateToStorage'\n\nexport const checkLogin = () => (dispatch) => {\n    \n}\n\nexport const signup = () => (dispatch) => {\n\n}\n\nexport const login = (mobile,userData={}) => (dispatch) => {\n    WriteStateToStorage()\n    dispatch({\n        type:SET_USER_NAME,\n        payload:mobile\n    })\n    dispatch({\n        type:SET_MUSIC_INFO,\n        payload:userData.MusicInfo\n    })\n    dispatch({\n        type:SET_USER_INFO,\n        payload:userData.UserInfo\n    })\n}\n\nexport const logout = (offlineData={}) => (dispatch) => {\n    dispatch({\n        type:SET_OFFLINE,\n    })\n    WriteStateToStorage()\n    dispatch({\n        type:REMOVE_USER_NAME,\n    })\n    dispatch({\n        type:SET_MUSIC_INFO,\n        payload:offlineData.MusicInfo\n    })\n    dispatch({\n        type:SET_USER_INFO,\n        payload:offlineData.UserInfo\n    })\n}\n\nexport const restoreInfo = () => (dispatch) => {\n\n}\n\nexport const setCurrentPlayList = (playlistname) => (dispatch) => {\n    dispatch({\n        type:SET_CURRENT_PLAYLIST,\n        payload:playlistname\n    })\n}\n\nexport const setCurrentPlaying = (musicObj) => (dispatch) => {\n    dispatch({\n        type:SET_CURRENT_PLAYING,\n        payload:musicObj\n    })\n}\n\nexport const setMusicDuration = (duration) => (dispatch) => {\n    dispatch({\n        type:SET_MUSIC_DURATION,\n        payload:duration\n    })\n}\n\nexport const setCurrentNav = (nav,sameNav) => (dispatch) => {\n    if(sameNav){\n        return\n    }\n    dispatch({\n        type:SET_CURRENT_NAV,\n        payload:nav\n    })\n}\n\nexport const setPlayMode = (mode) => (dispatch) => {\n    dispatch({\n        type:SET_PLAY_MODE,\n        payload:mode\n    })\n}","import React, { Component } from 'react';\nimport {connect} from 'react-redux'\nimport MusiclistItemOpration from './MusiclistItemOpration'\nimport {withRouter} from 'react-router-dom'\n\nimport {setCurrentPlaying,setCurrentPlayList} from '../../Redux/Actions/UserInfoAction'\nimport {addMusciToPlaylist} from '../../Redux/Actions/MusicInfoAction'\nimport {imageLoadEnd} from '../../Redux/Actions/UIAction'\n\nconst mapDispatchToProps = {\n    setCurrentPlaying,\n    setCurrentPlayList,\n    addMusciToPlaylist,\n    imageLoadEnd\n}\n\nconst mapStateToProps = (state) => ({\n    currentPlayList: state.UserInfo.currentPlayList,\n    currentPlaying : state.UserInfo.currentPlaying,\n    myPlaylists : state.MusicInfo.myPlaylists\n})\n \nclass MusiclistItem extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {};\n    }\n    listenMusic = (e) => {\n        let playlistname = this.props.currentNav\n        if(['热歌榜','新歌榜','抖音榜','电音榜','搜索'].includes(this.props.currentNav)){\n            playlistname = '最近播放'\n            !this.props.myPlaylists[playlistname].some(musicObj=>(\n                musicObj.url === this.props.musicObj.url\n            )) && this.props.addMusciToPlaylist(this.props.musicObj,playlistname)\n        }\n        playlistname !== this.props.currentPlayList && \n            this.props.setCurrentPlayList(playlistname);\n        if(this.props.musicObj.url !== this.props.currentPlaying.url){\n            this.props.setCurrentPlaying(this.props.musicObj)\n        }\n        const audio = document.querySelector('audio')\n        if(audio.paused)audio.play()\n    }\n\n    handleLoad = (e) => {\n        this.props.imageLoadEnd()\n    }\n    render() {\n        const localStyle = {}\n        if(this.props.musicObj.url === this.props.currentPlaying.url){\n            localStyle.color = 'red'\n        }\n        return (\n            <li style={localStyle} onClick={this.listenMusic} data-access=\"item\">\n                \n            <MusiclistItemOpration {...this.props}/>\n                {this.props.listType==='display' && <img alt='' onLoad={this.handleLoad} src={this.props.musicObj.picurl}/>}\n                <span data-access=\"item\">{this.props.musicObj.name} - {this.props.musicObj.artistsname}</span>\n            </li>\n        );\n    }\n}\n \nexport default withRouter(connect(mapStateToProps,mapDispatchToProps)(MusiclistItem));","import {\n    STOP_LOADING_UI\n} from '../Types'\n\nexport const imageLoadEnd = () => (dispatch) => {\n    dispatch({\n        type:STOP_LOADING_UI\n    })\n}","import React, { Component } from \"react\";\nimport MusiclistItem from './MusiclistItem'\nimport {withRouter} from 'react-router-dom'\n\n\n\nclass Musiclist extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n  }\n\n  render() {\n    let className = ''\n    if(/list/.test(this.props.location.pathname) && !/搜索/.test(this.props.location.pathname)){\n      className += 'display'\n    }else{\n      className += 'list'\n    }\n    return (\n      <ul className={className}>\n          {this.props.commonLists[this.props.currentNav].map((musicObj,index)=>(\n            <MusiclistItem listType={className} key={index} musicObj={musicObj} handleShowPlaylist={this.props.handleShowPlaylist}\n            type={this.props.type} handleDeleteMusicFromPlaylist={this.props.handleDeleteMusicFromPlaylist}\n            currentNav={this.props.currentNav}/>\n          ))}\n          {this.props.commonLists[this.props.currentNav].length===0&&<div className='empty'>列表为空</div>}\n      </ul>\n    )\n  }\n}\n\nexport default withRouter(Musiclist);\n","import React, { Component } from \"react\";\nimport {setCurrentPlaying,setCurrentPlayList} from '../../Redux/Actions/UserInfoAction'\nimport {connect} from 'react-redux'\n\nconst mapStateToProps = (state) => ({\n  myPlaylists : state.MusicInfo.myPlaylists\n})\n\nconst mapDispatchToProps = {\n  setCurrentPlaying,\n  setCurrentPlayList\n}\n\nclass PlaylistItemOpration extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n  }\n  handlePlay = (e) => {\n    if(this.props.myPlaylists[e.target.parentNode.dataset.playlistname].length >0){\n      this.props.setCurrentPlayList(e.target.parentNode.dataset.playlistname)\n      this.props.setCurrentPlaying(this.props.myPlaylists[e.target.parentNode.dataset.playlistname][0])\n      document.querySelector('audio').play()\n    }else{\n      alert('列表为空')\n    }\n  }\n  render() {\n    if(this.props.type === 'VIEW')\n    return (\n      <span className='playlistopration' data-playlistname={this.props.playlistname}>\n        {this.props.playlistname !== \"最近播放\" && (\n          <button onClick={this.props.handleDeletePlaylist}>删除</button>\n          )}\n        <button onClick={this.handlePlay}>播放</button>\n      </span>\n    )\n    else\n    return (\n        <span className='playlistopration' data-playlistname={this.props.playlistname}>\n          <input type=\"checkbox\" checked={this.props.includes} onChange={this.props.handleCheckChange}/>\n        </span>\n      );\n  }\n}\n\nexport default connect(mapStateToProps,mapDispatchToProps)(PlaylistItemOpration);","import React, { Component } from 'react';\nimport PlaylistItemOpration from './PlaylistItemOpration'\nimport {connect} from 'react-redux'\n\nconst mapStateToProps = (state) => ({\n    currentPlayList : state.UserInfo.currentPlayList\n})\n\nclass PlaylistItem extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {};\n    }\n    render() {\n        const style = {}\n        if(this.props.currentPlayList === this.props.playlistname){\n            style.color = 'red'\n        }\n        return (\n            <li>\n                <PlaylistItemOpration playlistname={this.props.playlistname} \n                    handleDeletePlaylist={this.props.handleDeletePlaylist} type={this.props.type}\n                    includes={this.props.includes} handleCheckChange={this.props.handleCheckChange}/>\n                <span style={style} onClick={this.props.handleViewPlaylist}>{this.props.playlistname}</span>\n            </li>\n        );\n    }\n}\n \nexport default connect(mapStateToProps,null)(PlaylistItem);","import React, { Component } from 'react';\n\nimport PlaylistItem from './PlaylistItem'\n\nclass Playlist extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {};\n    }\n    render() {\n        return (<>\n            <ul className='playlist'>\n                {Object.keys(this.props.myPlaylists).map((playlistname,index)=>(\n                    <PlaylistItem key={index} playlistname={playlistname} \n                        handleDeletePlaylist={this.props.handleDeletePlaylist}\n                        handleViewPlaylist={this.props.handleViewPlaylist} type={this.props.type}\n                        includes={this.props.type==='OPRATE' && this.props.myPlaylists[playlistname].some(music=>(\n                            music.url===this.props.currentMusicUrl))}\n                        handleCheckChange={this.props.handleCheckChange}/>\n                ))}\n            </ul>\n        </>);\n    }\n}\n \nexport default Playlist;","import React, { Component } from 'react';\nimport {connect} from 'react-redux'\nimport Musiclist from '../Music/Musiclist'\nimport Playlist from '../Music/Playlist'\n\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\nimport {createPlaylist,addMusciToPlaylist,deleteMusicFromPlaylist,getCommonLists} from '../../Redux/Actions/MusicInfoAction'\nimport {setCurrentPlaying} from '../../Redux/Actions/UserInfoAction'\n\nimport CachedRoundedIcon from '@material-ui/icons/CachedRounded';\nimport HighlightOffRoundedIcon from '@material-ui/icons/HighlightOffRounded';\n\nconst mapStateToProps = (state) => ({\n    commonLists : state.MusicInfo.commonLists,\n    currentNav : state.UserInfo.currentNav,\n    myPlaylists : state.MusicInfo.myPlaylists,\n    userName : state.UserInfo.userName,\n    currentPlayList: state.UserInfo.currentPlayList,\n    currentPlaying : state.UserInfo.currentPlaying,\n    loading: state.UI.loading,\n    loadingmusic: state.UI.loadingmusic,\n})\n\nconst mapDispatchToProps = {\n    createPlaylist,\n    addMusciToPlaylist,\n    deleteMusicFromPlaylist,\n    getCommonLists,\n    setCurrentPlaying,\n}\n\nclass ListBody extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            showPlaylist : false,\n            currentMusicUrl : '',\n            currentNav:this.props.currentNav\n        };\n    }\n    static getDerivedStateFromProps(props,state){\n        if(props.currentNav!==state.currentNav){\n            return {\n                currentNav:props.currentNav,\n                showPlaylist:false\n            }\n        }\n        return null\n    }\n    handleCreatePlaylist =  (e) => {\n        if(!this.props.userName){\n            alert('请先登录')\n            return\n        }\n        let playlistname = window.prompt('名称')\n        if(this.props.myPlaylists.hasOwnProperty(playlistname)){\n            alert('该列表名称已存在')\n        }else if(!playlistname){\n            return\n        }else{\n            this.props.createPlaylist(playlistname)\n        }\n    }\n    handleShowPlaylist = (e) => {\n        e.stopPropagation()\n        this.setState({\n            showPlaylist : true,\n            currentMusicUrl : e.target.dataset.url\n        })\n    }\n    handleHidePlaylist = (e) => {\n        this.setState({\n            showPlaylist : false,\n            currentMusicUrl : ''\n        })\n    }\n    handleCheckChange = (e) => {\n        const currentMusic = this.props.commonLists[this.props.currentNav].find(music=>(\n            music.url===this.state.currentMusicUrl\n        ))\n        if(e.target.checked){\n            this.props.addMusciToPlaylist(currentMusic,e.target.parentElement.dataset.playlistname)\n            if(this.props.myPlaylists[this.props.currentPlayList].length===0&&\n                    Object.keys(this.props.currentPlaying).length===0){\n                this.props.setCurrentPlaying(currentMusic)\n            }\n        }else{\n            this.props.deleteMusicFromPlaylist(currentMusic,e.target.parentElement.dataset.playlistname)\n        }\n    }\n    handlerReload = (e) => {\n        if(this.props.loading){\n            return\n        }\n        this.setState({\n            showPlaylist:false\n        })\n        this.props.getCommonLists(this.props.currentNav,false)\n    }\n    clearSearchResult = (e) => {\n        this.props.commonLists['搜索']=[]\n        this.forceUpdate()\n    }\n    render() {\n        return (<>\n            <div className='title'>{this.props.currentNav}</div>\n            {this.props.currentNav!=='搜索' ? \n                <div className='listbutton refreah' onClick={this.handlerReload}>\n                    {this.props.loading?<CircularProgress size='1.5rem'/>:<CachedRoundedIcon />}\n                </div>:\n                <div className='listbutton clear' onClick={this.clearSearchResult}><HighlightOffRoundedIcon /></div>}\n            {this.state.showPlaylist ?\n            (<div>\n                <div className='buttongroup'>\n                    <button onClick = {this.handleHidePlaylist}>&lt;返回</button>\n                    <button onClick = {this.handleCreatePlaylist}>创建播放列表</button>\n                </div>\n                <Playlist myPlaylists={this.props.myPlaylists} type={'OPRATE'} \n                    currentMusicUrl={this.state.currentMusicUrl}\n                    handleCheckChange={this.handleCheckChange}/>\n            </div>) :\n\n            !this.props.loadingmusic?<Musiclist handleShowPlaylist={this.handleShowPlaylist} commonLists={this.props.commonLists} \n                currentNav={this.props.currentNav} type=\"OPRATE\"/>:\n                <div className='loadingmusic'><CircularProgress /></div>}\n        </>)\n    }\n}\n \nexport default connect(mapStateToProps,mapDispatchToProps)(ListBody);","import React, { Component } from 'react';\nimport ListNav from '../Components/List/ListNav'\nimport ListBody from '../Components/List/ListBody'\n\nimport {connect} from 'react-redux'\nimport {getSearchList,getCommonLists} from '../Redux/Actions/MusicInfoAction'\nimport {setCurrentNav} from '../Redux/Actions/UserInfoAction'\n \nconst mapStateToProps = (state) => ({\n    commonLists : state.MusicInfo.commonLists,\n    currentNav : state.UserInfo.currentNav\n})\nconst mapDispatchToProps = {\n    getSearchList,\n    setCurrentNav,\n    getCommonLists\n}\n\n\nclass List extends Component {\n    constructor(props) {\n        super(props)\n        this.count = 0;\n        this.state = {}\n    }\n    static getDerivedStateFromProps(props,state){\n        let nav = props.location.pathname.match(/^\\/list\\/([^?]+)/)\n        nav = nav && ['热歌榜','新歌榜','抖音榜','电音榜','搜索'].includes(nav[1])? nav[1] : '热歌榜'\n        props.getCommonLists(nav,props.currentNav===nav || props.commonLists.hasOwnProperty(nav))\n        props.setCurrentNav(nav,props.currentNav===nav)\n        return {}\n    }\n    shouldComponentUpdate(nextProps,nextState){\n        // console.dir('shouldComponentUpdate')\n        // console.dir('nextProps.commonLists !== this.props.commonLists '+(nextProps.commonLists !== this.props.commonLists))\n        // console.dir('nextProps.currentNav !== this.props.currentNav '+(nextProps.currentNav !== this.props.currentNav))\n        // console.dir(nextProps.commonLists !== this.props.commonLists || \n        //     nextProps.currentNav !== this.props.currentNav)\n        // console.dir(nextProps)\n        // console.dir(this.props)\n        return  nextProps.commonLists !== this.props.commonLists && \n                nextProps.currentNav === this.props.currentNav\n    }\n    render() {\n        return (<>\n           <ListNav />\n           <ListBody />\n        </>);\n    }\n    getSnapshotBeforeUpdate(prevProps, prevState){\n        return null\n    }\n    componentDidUpdate(prevProps, prevState, snapshot){\n        \n    }\n    componentDidMount(){\n    }\n    componentWillUnmount(){\n    }\n}\n \nexport default connect(mapStateToProps,mapDispatchToProps)(List);","import React, { Component } from \"react\";\nimport MusiclistItemOpration from \"../Components/Music/MusiclistItemOpration\";\nimport Musiclist from '../Components/Music/Musiclist'\nimport Playlist from '../Components/Music/Playlist'\nimport {addMusciToPlaylist,deleteMusicFromPlaylist,createPlaylist} from '../Redux/Actions/MusicInfoAction'\nimport {setPlayMode,setCurrentPlaying} from '../Redux/Actions/UserInfoAction'\nimport {connect} from 'react-redux'\nimport {withRouter} from 'react-router-dom'\nimport SkipPreviousRoundedIcon from '@material-ui/icons/SkipPreviousRounded';\nimport SkipNextRoundedIcon from '@material-ui/icons/SkipNextRounded';\nimport PlayArrowRoundedIcon from '@material-ui/icons/PlayArrowRounded';\nimport PauseRoundedIcon from '@material-ui/icons/PauseRounded';\nimport QueueMusicRoundedIcon from '@material-ui/icons/QueueMusicRounded';\nimport RepeatOneRoundedIcon from '@material-ui/icons/RepeatOneRounded';\nimport RepeatRoundedIcon from '@material-ui/icons/RepeatRounded';\nimport ShuffleRoundedIcon from '@material-ui/icons/ShuffleRounded';\n\nconst mapStateToProps = (state) => ({\n  currentPlayList: state.UserInfo.currentPlayList,\n  currentPlaying : state.UserInfo.currentPlaying,\n  currentPlayMode : state.UserInfo.currentPlayMode,\n  myPlaylists : state.MusicInfo.myPlaylists,\n  musicDuration : state.UserInfo.musicDuration,\n  userName : state.UserInfo.userName\n})\nconst mapDispatchToProps = {\n  addMusciToPlaylist,\n  deleteMusicFromPlaylist,\n  setPlayMode,\n  setCurrentPlaying,\n  createPlaylist\n}\n\nclass Play extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      showPlaylist : false,\n      showMusiclist:false,\n      paused : true,\n      currentTime : 0,\n      pageX : 0,\n      iniCurrentTime :0,\n      noMusic : false,\n      noMusicInPlaylist:false\n    }\n  }\n  static getDerivedStateFromProps(props,state){\n    if(Object.keys(props.currentPlaying).length===0){\n      if(props.myPlaylists[props.currentPlayList].length===0){\n        return{noMusic : true}\n      }\n    }else{\n      if(props.myPlaylists[props.currentPlayList].length===0){\n        return{noMusicInPlaylist : true}\n      }\n    }\n    return null\n  }\n  handleClearInterval(){\n    cancelAnimationFrame(this.interval)\n  }\n  handleSetInterval(){\n    this.handleClearInterval()\n    const fn = ()=>{\n      this.setState({\n        currentTime:this.props.audio.current.currentTime,\n        paused:this.props.audio.current.paused\n      })\n      this.interval = window.requestAnimationFrame(fn)\n    }\n    fn()\n  }\n  handleCheckChange = (e) => {\n    if(this.state.noMusic)return\n    if(e.target.checked){\n        this.props.addMusciToPlaylist(this.props.currentPlaying,e.target.parentElement.dataset.playlistname)\n    }else{\n        this.props.deleteMusicFromPlaylist(this.props.currentPlaying,e.target.parentElement.dataset.playlistname)\n    }\n  }\n  handleDeleteMusicFromPlaylist=(e) => {\n    if(this.state.noMusic)return\n    e.stopPropagation()\n    const currentMusic = this.props.myPlaylists[this.props.currentPlayList].find(music=>(\n      music.url===e.target.dataset.url\n    ))\n    this.props.deleteMusicFromPlaylist(currentMusic,this.props.currentPlayList)\n  }\n  handleShowPlaylist = (e) => {\n    e.stopPropagation()\n    this.setState({\n      showPlaylist:!this.state.showPlaylist\n    })\n  }\n  showMusiclist=(e)=>{\n    this.setState({\n      showMusiclist:!this.state.showMusiclist\n    })\n    this.setState({\n      showPlaylist:false\n    })\n  }\n  play = ()=>{\n    if(this.state.noMusic)return\n    this.setState({\n      paused:false\n    })\n    this.props.audio.current.play()\n    this.handleSetInterval()\n  }\n  pause = ()=>{\n    if(this.state.noMusic)return\n    this.setState({\n      paused:true\n    })\n    this.props.audio.current.pause()\n    this.handleClearInterval()\n  }\n  clickPlayer = ()=>{\n    if(this.state.noMusic)return\n    if(this.state.paused){\n      this.play()\n    }else{\n      this.pause()\n    }\n  }\n  setPlayMode = (e) => {\n    let ele = e.target\n    while(ele.tagName !=='DIV'){\n      ele = ele.parentNode\n    }\n    this.props.setPlayMode(ele.dataset.changetomode)\n  }\n  previousMusic = (e) => {\n    if(this.state.noMusic)return\n    if(this.state.noMusicInPlaylist){\n      this.props.audio.current.currentTime = 0\n      this.play()\n      return\n    }\n    this.handleClearInterval()\n    let list=''\n    let index=0\n    switch(this.props.currentPlayMode){\n      case 'random' :    \n        list = this.props.myPlaylists[this.props.currentPlayList]\n        index = Math.floor(Math.random()*list.length)\n        this.props.setCurrentPlaying(list[index])\n        this.props.audio.current.currentTime = 0\n        this.play()\n        break\n      default :\n        list = this.props.myPlaylists[this.props.currentPlayList]\n        index = list.findIndex((item)=>(\n            item.url === this.props.currentPlaying.url\n        ))\n        this.props.setCurrentPlaying(list[(index+list.length-1)%list.length])\n        this.props.audio.current.currentTime = 0\n        this.play()\n    }\n  }\n  nextMusic = (e) => {\n    if(this.state.noMusic)return\n    if(this.state.noMusicInPlaylist){\n      this.props.audio.current.currentTime = 0\n      this.play()\n      return\n    }\n    this.handleClearInterval()\n    let list=''\n    let index=0\n    switch(this.props.currentPlayMode){\n      case 'random' :    \n        list = this.props.myPlaylists[this.props.currentPlayList]\n        index = Math.floor(Math.random()*list.length)\n        this.props.setCurrentPlaying(list[index])\n        this.props.audio.current.currentTime = 0\n        this.play()\n        break\n      default :\n        list = this.props.myPlaylists[this.props.currentPlayList]\n        index = list.findIndex((item)=>(\n            item.url === this.props.currentPlaying.url\n        ))\n        this.props.setCurrentPlaying(list[(index+1)%list.length])\n        this.props.audio.current.currentTime = 0\n          this.play()\n    }\n  }\n  clickedMusicItem = (e) => {\n    if(e.target.dataset.access==='item'){\n      this.setState({\n        paused:false\n      })\n      this.handleSetInterval()\n    }\n  }\n  handleCreatePlaylist =  (e) => {\n    if(!this.props.userName){\n        alert('请先登录')\n        return\n    }\n    let playlistname = window.prompt('名称')\n    if(this.props.myPlaylists.hasOwnProperty(playlistname)){\n        alert('该列表名称已存在')\n    }else if(!playlistname){\n        return\n    }else{\n        this.props.createPlaylist(playlistname)\n    }\n  }\n  convertSecond(second){\n    let min = String(Math.floor(second/60))\n    let left = String(Math.round(second%60))\n    min < 10 && (min = '0'+min)\n    left < 10 && (left = '0' + left)\n    return min+':'+left\n  }\n  handleTouchStart = (e) => {\n    e.target.style.transform='scale(1.5)'\n    this.handleClearInterval()\n    this.setState({\n      pageX : e.targetTouches[0].pageX,\n      iniCurrentTime : this.state.currentTime\n    })\n  }\n  handleTouchMove = (e) => {\n    if(this.state.noMusic)return\n    const currentTime = \n    this.state.iniCurrentTime+(e.targetTouches[0].pageX-this.state.pageX)/300*this.props.musicDuration\n    if(currentTime <= this.props.musicDuration && currentTime>=0){\n      this.setState({\n      currentTime\n      })\n    }\n  }\n  handleTouchEnd = (e) => {\n    e.target.style.transform='scale(1)'\n    if(this.state.noMusic)return\n    this.setState({\n      pageX : 0,\n      iniCurrentTime:0\n    })\n    this.props.audio.current.currentTime = this.state.currentTime\n    if(!this.state.paused)this.play()\n  }\n  render() {\n    return (<>\n          <div className='controller'>\n            <div onClick={this.showMusiclist}><QueueMusicRoundedIcon /></div>\n            <div onClick={this.previousMusic}><SkipPreviousRoundedIcon /></div>\n            {this.state.paused ? <div onClick={this.play}><PlayArrowRoundedIcon /></div> :\n            <div onClick={this.pause}><PauseRoundedIcon /></div>}\n            <div onClick={this.nextMusic}><SkipNextRoundedIcon /></div>\n            {this.props.currentPlayMode==='loop' &&<div data-changetomode='random' \n                                onClick={this.setPlayMode}><RepeatOneRoundedIcon /></div>}\n            {this.props.currentPlayMode==='list' &&<div data-changetomode='loop' \n                                onClick={this.setPlayMode}><RepeatRoundedIcon /></div>}\n            {this.props.currentPlayMode==='random' &&<div data-changetomode='list' \n                                onClick={this.setPlayMode}><ShuffleRoundedIcon /></div>}\n          </div>\n          <div className='title'>\n            <div className='process'>\n              <div className='currenttime' style={{\n                width:this.state.currentTime/this.props.musicDuration*300 || 0\n                }}>\n                  <div className=\"circle\" onTouchMove={this.handleTouchMove}\n                        onTouchStart={this.handleTouchStart} onTouchEnd={this.handleTouchEnd}></div>\n              </div>\n              <div className='digitaltime'>\n                {this.convertSecond(this.state.currentTime)+'/'+this.convertSecond(this.props.musicDuration)}\n              </div>\n            </div>\n          </div>\n          \n          {(!this.state.showMusiclist && !this.state.showPlaylist) && \n          <div className='player' onClick={this.clickPlayer}>\n            <img alt='' src={this.props.currentPlaying.picurl}/>\n            <span style={{color:'red'}}>{this.props.currentPlaying.name} - {this.props.currentPlaying.artistsname}</span>\n            <MusiclistItemOpration type=\"OPRATE\" musicObj={this.props.currentPlaying} \n                      handleShowPlaylist={this.handleShowPlaylist}/>\n          </div>}\n            \n          {this.state.showMusiclist && \n          <div onClickCapture={this.clickedMusicItem}>\n            <button style={{margin:'0 auto',display:'block'}} onClick={this.showMusiclist}>&lt;返回</button>\n            <Musiclist type=\"DELETE\" commonLists={this.props.myPlaylists} \n                currentNav={this.props.currentPlayList} \n                handleDeleteMusicFromPlaylist={this.handleDeleteMusicFromPlaylist}/>\n          </div>}\n\n          {this.state.showPlaylist && \n          <div>\n            <div className='buttongroup'>\n            <button onClick={this.handleShowPlaylist}>&lt;返回</button>\n            <button onClick = {this.handleCreatePlaylist}>创建播放列表</button>\n            </div>\n            <Playlist myPlaylists={this.props.myPlaylists} type={'OPRATE'} \n                    currentMusicUrl={this.props.currentPlaying.url}\n                    handleCheckChange={this.handleCheckChange}/>\n          </div>}\n    </>);\n  }\n  componentDidMount(){\n    this.setState({\n      paused:this.props.audio.current.paused,\n      currentTime:this.props.audio.current.currentTime\n    })\n    this.handleSetInterval()\n  }\n  \n  componentWillUnmount(){\n    this.handleClearInterval();\n  }\n}\nexport default connect(mapStateToProps,mapDispatchToProps)(withRouter(Play));","import React from \"react\";\nimport axios from 'axios'\nimport { connect } from \"react-redux\";\nimport {login} from '../../Redux/Actions/UserInfoAction'\nimport {NavLink} from 'react-router-dom'\n\nimport njwt from 'njwt'\n\nconst mapDispatchToProps = {\n  login\n}\n\nconst mapStateToProps = (state) => ({\n  loading:state.UI.loading,\n  errors:state.UI.errors\n})\n\nclass Login extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      mobile : '',\n      password : '',\n      error_message:'',\n      loading:false\n    };\n  }\n   \n  handleSubmit = (e) => {\n    this.setState({loading:true})\n    e.preventDefault()\n    const fd = new FormData()\n    fd.append('apikey','84fa40e600ae8a00c47eaf282d3bda46')\n    fd.append('passwd',this.state.password)\n    fd.append('name',this.state.mobile)\n    axios.post('https://api.apiopen.top/loginUser',fd).then(res=>{\n      \n      if(res.data.code === 200){\n        \n        let userData = {}\n        if(window.localStorage.MusicApp){\n          try{\n          userData = njwt.verify(window.localStorage.MusicApp,'MusicApp').body.stores[res.data.result.name] || {}\n          }catch(err){\n            console.dir(err)\n          }\n        }\n        this.props.login(res.data.result.name,userData)\n      }else{\n        this.setState({\n          error_message:res.data.message,\n          loading:false\n        })\n      }\n    }).catch(err=>(\n      console.dir(err)\n    )).finally(()=>{\n      document.querySelector('audio').pause()\n    })\n  }\n  handleChange = (e) => {\n    this.setState({\n      [e.target.name] : e.target.value,\n      error_message:'',\n    })\n  }\n  render() {\n    return (<>\n      <div className='accountopration'>\n      <NavLink to=\"/my/collection\">&lt;返回</NavLink>\n      <div>登陆</div>\n      </div>\n      <form onSubmit={this.handleSubmit} className='accountform'>\n        <div className='errormessage'>{this.state.error_message}</div>\n        <label>账 号　<input type=\"text\" name=\"mobile\" onChange={this.handleChange} autoFocus/></label>\n        <label>密 码　<input type=\"password\" name=\"password\" onChange={this.handleChange}/></label>\n        <input type=\"submit\" value=\"登 陆\" className='accountbutton'/>\n      </form>\n    </>);\n  }\n  componentDidUpdate(){\n    if(this.state.loading){\n      for(var i of document.forms[0].elements){\n        i.disabled = true\n      }\n    }else if(document.forms[0].elements[0].disabled){\n      for(var j of document.forms[0].elements){\n        j.disabled = false\n      }\n    }\n  }\n}\n\nexport default connect(mapStateToProps,mapDispatchToProps)(Login)","import React, { Component } from 'react';\nimport Playlist from '../Music/Playlist'\nimport Musiclist from '../Music/Musiclist'\n\nimport {logout} from '../../Redux/Actions/UserInfoAction'\nimport {createPlaylist,deletePlaylist,deleteMusicFromPlaylist} from '../../Redux/Actions/MusicInfoAction'\nimport {setCurrentPlayList} from '../../Redux/Actions/UserInfoAction'\nimport {connect} from 'react-redux'\n\nimport njwt from 'njwt'\n\nconst mapStateToProps = (state) => ({\n    myPlaylists : state.MusicInfo.myPlaylists,\n    userName : state.UserInfo.userName,\n    currentPlayList:state.UserInfo.currentPlayList\n})\n\nconst mapDispatchToProps = {\n    logout,\n    createPlaylist,\n    deletePlaylist,\n    deleteMusicFromPlaylist,\n    setCurrentPlayList\n}\n\nclass Collection extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            showPlaylist : false,\n            currentPlaylist : '最近播放',\n            loggedout:false\n        };\n    }\n    handleClidk = (e) => {\n        let offlineData = null\n        if(window.localStorage.MusicApp){\n            try{\n            offlineData = njwt.verify(window.localStorage.MusicApp,'MusicApp').body.stores['offline'] || {}\n            }catch(err){\n                console.dir(err)\n            }\n        }\n        this.props.logout(offlineData)\n        this.setState({\n            loggedout:true\n        })\n    }\n    handleCreatePlaylist =  (e) => {\n        if(!this.props.userName){\n            alert('请先登录')\n            return\n        }\n        let playlistname = window.prompt('名称')\n        if(this.props.myPlaylists.hasOwnProperty(playlistname)){\n            alert('该列表名称已存在')\n        }else if(!playlistname){\n            return\n        }else{\n            this.props.createPlaylist(playlistname)\n        }\n    }\n    handleDeletePlaylist = (e) => {\n        const playlistname = e.target.parentNode.dataset.playlistname\n        if(!window.confirm('是否要删除列表'+playlistname)){\n            return\n        }\n        if(!this.props.myPlaylists.hasOwnProperty(playlistname)){\n            alert('删除失败')\n            return\n        }\n        if(playlistname === '最近播放'){\n            alert('无法删除默认列表')\n            return\n        }\n        if(this.props.currentPlayList === playlistname){\n            this.props.setCurrentPlayList('最近播放')\n        }\n        this.props.deletePlaylist(playlistname)\n    }\n    handleDeleteMusicFromPlaylist = (e) => {\n        e.stopPropagation()\n        const currentMusic = this.props.myPlaylists[this.state.currentPlaylist].find(music=>(\n            music.url===e.target.dataset.url\n        ))\n        this.props.deleteMusicFromPlaylist(currentMusic,this.state.currentPlaylist)\n    }\n    handleViewPlaylist = (e) => {\n        e.stopPropagation()\n        this.setState({\n            showPlaylist : true,\n            currentPlaylist : e.target.textContent\n        })\n    }\n    handleHidePlaylist = (e) => {\n        this.setState({\n            showPlaylist : false\n        })\n    }\n    render() {\n        return (<>\n            {this.props.userName && <div className='accountopration'>\n            <div>欢迎，{this.props.userName}</div><button onClick = {this.handleCreatePlaylist}>创建播放列表</button><button onClick = {this.handleClidk}>退出登陆</button>\n            </div>}\n            \n            {this.state.showPlaylist ?\n            <div style={{paddingTop:'20px'}}>\n                <div className='buttongroup'>\n                <button onClick={this.handleHidePlaylist}>&lt;返回</button>\n                <div>{this.state.currentPlaylist}</div>\n                </div>\n                <Musiclist commonLists={this.props.myPlaylists} currentNav={this.state.currentPlaylist} \n                        type={'DELETE'} handleDeleteMusicFromPlaylist={this.handleDeleteMusicFromPlaylist}/>\n            </div>:\n            <Playlist myPlaylists={this.props.myPlaylists} handleDeletePlaylist={this.handleDeletePlaylist}\n                handleViewPlaylist={this.handleViewPlaylist} type={'VIEW'}/>}\n        </>);\n    }\n    componentDidUpdate(){\n        if(this.state.loggedout){\n            document.querySelector('audio').pause()\n        }\n    }\n}\n \nexport default connect(mapStateToProps,mapDispatchToProps)(Collection);","import React from \"react\";\nimport axios from 'axios'\nimport { connect } from \"react-redux\";\nimport {login} from '../../Redux/Actions/UserInfoAction'\nimport {NavLink} from 'react-router-dom'\n\nconst mapDispatchToProps = {\n  login\n}\n\nconst mapStateToProps = (state) => ({\n  loading:state.UI.loading,\n  errors:state.UI.errors\n})\n\nclass Register extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      mobile : '',\n      password : '',\n      error_message:'',\n      loading:false\n    };\n  }\n   \n  handleSubmit = (e) => {\n    this.setState({loading:true})\n    e.preventDefault()\n    const fd = new FormData()\n    fd.append('apikey','84fa40e600ae8a00c47eaf282d3bda46')\n    fd.append('passwd',this.state.password)\n    fd.append('name',this.state.mobile)\n    axios.post('https://api.apiopen.top/registerUser',fd).then(res=>{\n      if(res.data.code === 200){\n        this.props.login(res.data.result.name)\n      }else{\n        this.setState({\n          error_message:res.data.message,\n          loading:false\n        })\n      }\n    }).catch(err=>(\n      console.dir(err)\n    ))\n  }\n  handleChange = (e) => {\n    this.setState({\n      [e.target.name] : e.target.value,\n      error_message:'',\n    })\n  }\n  render() {\n    return (<>\n      <div className='accountopration'>\n      <NavLink to=\"/my/collection\">&lt;返回</NavLink>\n      <div>注册</div>\n      </div>\n      <form onSubmit={this.handleSubmit} className='accountform'>\n        <div className='errormessage'>{this.state.error_message}</div>\n        <label>账 号　<input type=\"text\" name=\"mobile\" onChange={this.handleChange} autoFocus/></label>\n        <label>密 码　<input type=\"password\" name=\"password\" onChange={this.handleChange}/></label>\n        <input type=\"submit\" value=\"注 册\" className='accountbutton'/>\n      </form>\n    </>);\n  }\n  componentDidUpdate(){\n    if(this.state.loading){\n      for(var i of document.forms[0].elements){\n        i.disabled = true\n      }\n    }else if(document.forms[0].elements[0].disabled){\n      for(var j of document.forms[0].elements){\n        j.disabled = false\n      }\n    }\n  }\n}\n\nexport default connect(mapStateToProps,mapDispatchToProps)(Register)","import React, { Component } from 'react';\nimport {Route,NavLink,withRouter} from 'react-router-dom'\nimport Login from '../Components/My/Login'\nimport Collection from '../Components/My/Collection'\nimport Register from '../Components/My/Register'\nimport { connect } from 'react-redux';\n\nimport {createPlaylist} from '../Redux/Actions/MusicInfoAction'\n\nconst mapStataToPtops = (state) => ({\n    myPlaylists : state.MusicInfo.myPlaylists,\n    userName : state.UserInfo.userName\n})\n\nconst mapDispatchToProps = {\n    createPlaylist\n}\n \nclass My extends Component {\n    constructor(props) {\n        super(props);\n        this.state={}\n    }\n    static getDerivedStateFromProps(props,state){\n        if(props.userName){\n            if(props.location.pathname === '/my' || props.location.pathname !== '/my/collection'){\n                props.history.replace('/my/collection',null)\n            }\n        }else{\n            if(props.location.pathname === '/my' ){\n                props.history.replace('/my/collection',null)\n            }\n        }\n        return null\n    }\n    handleCreatePlaylist =  (e) => {\n        if(!this.props.userName){\n            alert('请先登录')\n            return\n        }\n        let playlistname = window.prompt('名称')\n        if(this.props.myPlaylists.hasOwnProperty(playlistname)){\n            alert('该列表名称已存在')\n        }else if(!playlistname){\n            return\n        }else{\n            this.props.createPlaylist(playlistname)\n        }\n    }\n    render() {\n        return (\n            <>\n                {!this.props.userName && this.props.location.pathname==='/my/collection' &&\n                <div className='accountopration'>\n                <NavLink to=\"/my/login\">登陆</NavLink>\n                <NavLink to=\"/my/register\">注册</NavLink>\n                <button onClick = {this.handleCreatePlaylist}>创建播放列表</button>\n                </div>\n                }\n                <Route path='/my/login' component={Login}/>\n                <Route path='/my/register' component={Register}/>\n                <Route path='/my/collection' component={Collection}/>\n            </>\n        );\n    }\n}\n \nexport default connect(mapStataToPtops,mapDispatchToProps)(withRouter(My));","import React, { Component } from 'react';\nimport {withRouter} from 'react-router-dom'\n\nimport {connect} from 'react-redux'\n\nimport BottomNavigation from '@material-ui/core/BottomNavigation';\nimport BottomNavigationAction from '@material-ui/core/BottomNavigationAction';\n\nimport Album from '@material-ui/icons/Album';\nimport QueueMusic from '@material-ui/icons/QueueMusic'\nimport AccountCircle from '@material-ui/icons/AccountCircle'\n\nimport {Link} from 'react-router-dom'\n\nconst mapStateToProps = (state) => ({\n    currentNav : state.UserInfo.currentNav || '热歌榜',\n})\n\nclass BottomNav extends Component {\n    constructor(props) {\n        super(props);\n        let path = this.props.location.pathname.match(/^\\/(\\w+)\\/?/);\n        this.state = {\n            value : path ? path[1] : 'list',\n        };\n    }\n    handleChange = (event,value)=>{\n        this.setState({value})\n    }\n    render() {\n        return (<div className='bottom-nav'>\n            <BottomNavigation showLabels value={this.state.value} onChange={this.handleChange}>\n                <BottomNavigationAction component={Link} to={'/list/'+this.props.currentNav} value='list' label=\"推荐\" icon={<QueueMusic />} />\n                <BottomNavigationAction component={Link} to='/play' value='play' label=\"播放\" icon={<Album />} />\n                <BottomNavigationAction component={Link} to='/my' value='my' label=\"收藏\" icon={<AccountCircle />} />\n            </BottomNavigation>\n        </div>);\n    }\n}\n\nexport default connect(mapStateToProps,null)(withRouter(BottomNav));","import React from \"react\";\n\nimport store from './Redux/Store'\nimport {Provider} from 'react-redux'\n\nimport List from './Pages/List'\nimport Play from './Pages/Play'\nimport My from './Pages/My'\nimport BottomNav from './Components/BottomNav'\nimport MainAudio from './Components/Play/MainAudio'\n\nimport {BrowserRouter,Switch,Route,Redirect} from 'react-router-dom'\n\nimport WriteStateToStorage from './WriteStateToStorage'\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    window.onbeforeunload = function(){\n      WriteStateToStorage()\n    }\n    this.audio = React.createRef()\n  }\n  render() {\n    return (\n    <Provider store={store}>\n    <BrowserRouter>\n      <MainAudio ref={this.audio}/>\n      <Switch>\n        <Route path='/list' component={List}/>\n        <Route path='/play' render={()=><Play audio={this.audio}/>}/>\n        <Route path='/my' component={My}/>\n        <Redirect to=\"/list/热歌榜\" />\n      </Switch>\n      <BottomNav/>\n    </BrowserRouter>\n    </Provider>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n"],"sourceRoot":""}